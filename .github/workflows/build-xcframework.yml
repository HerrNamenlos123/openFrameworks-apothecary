name: build-xcframeworks

on:
  workflow_run:
    workflows: [build-ios, build-tvos, build-macos, build-catOS, build-xros, build-watchos, build-xros]
    types:
      - completed
jobs:
  on-success:
    runs-on: macos-14
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      DEVELOPER_DIR: "/Applications/Xcode_15.2.app/Contents/Developer"
    steps:
      - run: echo 'The triggering workflow passed'
      - name: Determine Release
        id: vars
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "release=nightly" >> $GITHUB_ENV
            echo "prerelease=false" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/bleeding" ]]; then
            echo "release=bleeding" >> $GITHUB_ENV
            echo "prerelease=true" >> $GITHUB_ENV
          fi
      - uses: actions/checkout@v4
      - name: Scripts Calc Formula
        run: ./scripts/calculate_formulas.sh
      - name: Scripts Install
        run: ./scripts/macos/install.sh
      - name: Download all artifacts
        uses: actions/github-script@v7
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: out
      - name: Extract Artifacts to /out
        run: |
          find out -name '*.zip' -exec unzip -d out/ {} \;
      - name: List output directory out
        run: ls -lah ./
      - name: Merge built libaries into Mega XC Framework
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: scripts/macos/xcframework_all.sh
        env:
          GA_CI_SECRET: ${{ secrets.CI_SECRET }}
      - name: Package Final
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: scripts/package.sh
        env:
          BUNDLE: ${{ matrix.bundle }}
          GA_CI_SECRET: ${{ secrets.CI_SECRET }}
      - name: Update Release arm64
        if: github.repository == 'openframeworks/apothecary' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/bleeding')
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.release }}
          release: ${{ env.release }}
          prerelease: ${{ env.prerelease }}
          files: out/openFrameworksLibs_${{ env.release }}_${{ env.TARGET }}_${{ matrix.bundle }}.tar.bz2
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
